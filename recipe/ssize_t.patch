diff --git a/ext/device_proxy.cpp b/ext/device_proxy.cpp
index 122a043..bf55d6e 100644
--- a/ext/device_proxy.cpp
+++ b/ext/device_proxy.cpp
@@ -307,15 +307,15 @@ namespace PyDeviceProxy
     void __set_value(T& obj, bopy::object& py_value) {
         // need to fill item names first because in case it is a sub-blob,
         // the Tango C++ API doesnt't provide a way to do it
-        bopy::ssize_t n = bopy::len(py_value);
+        Py_ssize_t n = bopy::len(py_value);
         std::vector < std::string > elem_names;
-        for (size_t i = 0; i < n; ++i) {
+        for (Py_ssize_t i = 0; i < n; ++i) {
             std::string s = bopy::extract < std::string > (py_value[i]["name"]);
             elem_names.push_back(bopy::extract<std::string>(py_value[i]["name"]));
         }
         obj.set_data_elt_names(elem_names);
 
-        for (size_t i = 0; i < n; ++i) {
+        for (Py_ssize_t i = 0; i < n; ++i) {
             bopy::object item = py_value[i];
             std::string item_name = bopy::extract<std::string>(item["name"]);
             bopy::object py_item_data = item["value"];
diff --git a/ext/server/pipe.cpp b/ext/server/pipe.cpp
index 677c386..f51aa28 100644
--- a/ext/server/pipe.cpp
+++ b/ext/server/pipe.cpp
@@ -385,13 +385,13 @@ namespace PyTango { namespace Pipe {
         // the Tango C++ API doesnt't provide a way to do it
         Py_ssize_t size = bopy::len(py_value);
 	std::vector<std::string> elem_names;
-	for(ssize_t i = 0; i < size; ++i)
+	for(Py_ssize_t i = 0; i < size; ++i)
 	{
 	    elem_names.push_back(bopy::extract<std::string>(py_value[i]["name"]));
 	}
 	obj.set_data_elt_names(elem_names);
 
-	for(ssize_t i = 0; i < size; ++i)
+	for(Py_ssize_t i = 0; i < size; ++i)
 	{
             bopy::object item = py_value[i];
             std::string item_name = bopy::extract<std::string>(item["name"]);
